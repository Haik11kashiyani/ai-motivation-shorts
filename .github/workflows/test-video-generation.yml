name: Test Video Generation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger

jobs:
  test-video-generation:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: 📦 Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        sudo apt-get install -y fonts-dejavu-core fonts-dejavu-extra
        echo "✅ FFmpeg and fonts installed"
    
    - name: 📚 Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "✅ Python packages installed"
    
    - name: 🎬 Create Test Video
      run: |
        echo "🚀 Starting video generation test..."
        python main.py &
        PID=$!
        
        # Wait for 2 minutes or until video is created
        for i in {1..120}; do
          if ls output/*.mp4 1> /dev/null 2>&1; then
            echo "✅ Video file found!"
            kill $PID 2>/dev/null || true
            break
          fi
          sleep 1
        done
        
        # Kill the process if still running
        kill $PID 2>/dev/null || true
        
        echo "📊 Checking output directory..."
        ls -lah output/ || echo "⚠️ No output directory yet"
    
    - name: 📊 Check Generated Files
      run: |
        echo "==================================="
        echo "📁 OUTPUT DIRECTORY CONTENTS:"
        echo "==================================="
        if [ -d "output" ]; then
          ls -lh output/
          
          if ls output/*.mp4 1> /dev/null 2>&1; then
            echo ""
            echo "==================================="
            echo "✅ VIDEO GENERATED SUCCESSFULLY!"
            echo "==================================="
            
            for video in output/*.mp4; do
              echo "📹 Video: $(basename $video)"
              echo "📏 Size: $(du -h $video | cut -f1)"
              
              # Get video info using ffprobe
              echo "📊 Video Details:"
              ffprobe -v error -show_entries format=duration,size,bit_rate -show_entries stream=width,height,codec_name,r_frame_rate -of default=noprint_wrappers=1 "$video"
            done
          else
            echo "❌ No video files generated"
            exit 1
          fi
        else
          echo "❌ Output directory not created"
          exit 1
        fi
    
    - name: 🎨 Capture Video Thumbnail
      if: success()
      run: |
        echo "📸 Extracting thumbnail from video..."
        VIDEO=$(ls output/*.mp4 | head -n 1)
        ffmpeg -i "$VIDEO" -ss 00:00:02 -vframes 1 output/thumbnail.png -y
        echo "✅ Thumbnail saved: output/thumbnail.png"
    
    - name: 📤 Upload Video as Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: generated-video
        path: output/*.mp4
        retention-days: 7
    
    - name: 📤 Upload Thumbnail as Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: video-thumbnail
        path: output/thumbnail.png
        retention-days: 7
    
    - name: 📊 Test Summary
      if: always()
      run: |
        echo ""
        echo "═══════════════════════════════════════════════════════"
        echo "            🎬 VIDEO GENERATION TEST SUMMARY            "
        echo "═══════════════════════════════════════════════════════"
        echo ""
        
        if [ -d "output" ] && ls output/*.mp4 1> /dev/null 2>&1; then
          VIDEO=$(ls output/*.mp4 | head -n 1)
          echo "✅ Status: SUCCESS"
          echo "📹 Video File: $(basename $VIDEO)"
          echo "📏 File Size: $(du -h $VIDEO | cut -f1)"
          echo ""
          echo "📥 Download your video from 'Artifacts' section above!"
          echo ""
          echo "Next Steps:"
          echo "  1. Download the video artifact"
          echo "  2. Check quality and animations"
          echo "  3. Ready to add YouTube upload!"
        else
          echo "❌ Status: FAILED"
          echo "⚠️  Video generation did not complete"
          echo ""
          echo "Check the logs above for errors"
        fi
        echo "═══════════════════════════════════════════════════════"
    
    - name: 🧹 Cleanup
      if: always()
      run: |
        echo "🧹 Cleaning up temporary files..."
        rm -f temp_voiceover.mp3
        echo "✅ Cleanup complete"
